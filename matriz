import matplotlib.pyplot as plt

for i in range(len(matriz)):
    for j in range(len(matriz)):
        print(matriz[i][j])

matriz = [[1,2,7], [3,4,8], [5,6,9]]
def mostra_matriz(matriz):
    for linha in matriz:
        print(linha)
    return

mostra_matriz(matriz)

for i in range(len(matriz)):
    for j in range(len(matriz)):
        print(matriz[i][j])

matriz = [[1,2,7], [3,4,8], [5,6,9]]
def mostra_matriz(matriz):
    for linha in matriz:
        print(linha)
    return

mostra_matriz(matriz)

linhas = 12
colunas = 12
def cria_matriz(linhas, colunas):
    matriz = []
    for i in range(linhas):
        linha = []
        for j in range(colunas):
            linha.append(i)
            if i == j:
                linha.append(1)
        matriz.append(linha)
    return matriz

matriz = cria_matriz(linhas, colunas)

for i in range(len(matriz)):
    for j in range(len(matriz)):
        if i == j:
            matriz[i][j] = 1
for i in range(len(matriz)):
    matriz[i][j] = 1

linhas = 12
colunas = 12


def cria_matriz(linhas, colunas):
    matriz = []
    for i in range(linhas):
        linha = []
        for j in range(colunas):
            linha.append(i)
        matriz.append(linha)
    return matriz


def matriz_contra_diagonal(matriz):
    for i in range(len(matriz)):
        for j in range(len(matriz[i])):
            if i + j == len(matriz) - 1:
                matriz[i][j] = 1
    return matriz


def plota_matriz(matriz):
    plt.imshow(matriz, cmap='gray')
    plt.colorbar()
    plt.show()


matriz = cria_matriz(12, 12)


# matriz = matriz_contra_diagonal(matriz)

def matriz_diagonal_ruim(matriz):
    for i in range(len(matriz)):
        for j in range(len(matriz)):
            if i > j:
                matriz[i][j] = 1
    return


def matriz_diagonal_boa(matriz):
    for i in range(len(matriz)):
        for j in range(i):
            matriz[i][j] = 1
    return


def matriz_transposta(matriz):
    for i in range(len(matriz)):
        for j in range(i):
            aux = matriz[i][j]
            matriz[i][j] = matriz[j][i]
            matriz[j][i] = aux
    return


def matriz_xadrez_ruim(matriz):
    for i in range(len(matriz)):
        for j in range(len(matriz[i])):
            if i % 2 == 0:
                if j % 2 == 0:
                    matriz[i][j] = 0
                else:
                    matriz[i][j] = 1
            else:
                if j % 2 == 0:
                    matriz[i][j] = 1
                else:
                    matriz[i][j] = 0
    return

def matriz_xadrez_bom(matriz):
    for i in range(len(matriz)):
        for j in range(len(matriz)):
            if (i+j)%2 == 0:
                matriz[i][j] = 1
            else:
                matriz[i][j] = 0
    return

pesos = [1, 2, 3, 2, 1]
notas = [[6, 4, 2, 0, 3, 7, 2, 10, 5, 1], [1, 5, 5, 6, 7, 8, 2, 8, 8, 4], [9, 4, 10, 10, 5, 9, 1, 2, 9, 0], [10, 5, 7, 4, 6, 6, 7, 4, 7, 1], [4, 4, 3, 0, 3, 3, 0, 0, 10, 0]]
soma_pesos = matriz_calculo(pesos, notas)
notas_finais = []
def matriz_calculo(pesos, notas):
    for j in range(len(notas[0])):
        soma = 0
        for i in range(len(pesos)):
            soma += pesos[i]*notas[i][j]
            soma /= soma_pesos
    notas_finais.append(round(soma,2))
    return notas_finais

resultado = matriz_calculo(pesos, notas)
print(resultado)


plota_matriz(matriz)
matriz_xadrez_bom(matriz)
plota_matriz(matriz)
